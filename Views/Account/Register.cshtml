@model FYP.Models.RegisterViewModel

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<link href="~/Content/bootstrap.css" rel="stylesheet" />
<link href="~/Content/styles.css" rel="stylesheet" />


<div id="loginModal" style="margin-top:52px" class="modal show" tabindex="-1" role="dialog" aria-hidden="true">
    <br /><br /><br />
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
                <h1 class="text-center">SignUp</h1>
            </div>
            <div class="modal-body">
                @using (Html.BeginForm("Register", "Account", FormMethod.Post, new { enctype = "multipart/form-data" }))
                {
                    @Html.AntiForgeryToken()
                    <br /><br /><br />
                    <div style="color:red;font-size:x-large">
                        @Html.ValidationSummary(true)
                    </div>
                        <div class="form-group">
                            @Html.TextBoxFor(m => m.UserName, new { id = "UserName", name = "UserName", @class = "form-control input-lg", placeholder = "User Name", required = "required" })
                            @Html.ValidationMessageFor(model => model.UserName)
                            <div id="error1" style="font-size:x-large"></div>
                        </div>

                        <div class="form-group">
                            @Html.TextBoxFor(m => m.fname, new { id = "fname", name = "fname", @class = "form-control input-lg", placeholder = "First Name", required = "required" })
                            @Html.ValidationMessageFor(model => model.fname)

                        </div>

                        <div class="form-group">
                            @Html.TextBoxFor(m => m.lname, new { id = "lname", name = "lname", @class = "form-control input-lg", placeholder = "Last Name" })

                        </div>

                        <div class="form-group">
                            @Html.TextBoxFor(m => m.address, new { id = "address", name = "address", @class = "form-control input-lg", placeholder = "Address" })
                            @Html.ValidationMessageFor(model => model.address)
                        </div>

                        <div class="form-group">
                            @Html.TextBoxFor(m => m.phone, new { id = "phone", name = "phone", @class = "form-control input-lg", placeholder = "Phone Number", onkeypress = "return isNumberKey(event)" })
                            @Html.ValidationMessageFor(model => model.phone)
                        </div>

                        <div class="form-group">
                            @Html.TextBoxFor(m => m.Email, new { type = "email", id = "Email", name = "Email", @class = "form-control input-lg", placeholder = "E-Mail", required = "required" })
                            @Html.ValidationMessageFor(model => model.Email)
                            <div id="error" style="font-size:x-large"></div>
                        </div>
                        <div class="form-group">
                            @Html.PasswordFor(m => m.Password, new { @class = "form-control input-lg", placeholder = "Password", required = "required" })
                            @Html.ValidationMessageFor(model => model.Password)
                        </div>
                        <div class="form-group">
                            @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control input-lg", placeholder = "Confirm Password", required = "required" })
                            @Html.ValidationMessageFor(model => model.ConfirmPassword)
                        </div>

                        <div>
                            <label for="dob" class="col-md-3">
                                Date Of Birth:
                            </label>
                            <div class="col-md-8">
                                <p>
                                    @*<input class="form-control" type="date" name="dob" id="dob" size="34" />*@
                                    @Html.TextBoxFor(m => m.dob, new { type = "date", id = "dob", name = "dob", @class = "form-control" })
                                </p>
                                <br />
                            </div>
                            <div class="col-md-1">
                                <i class="fa fa-lock fa-2x"></i>
                            </div>
                        </div>


                        <div>
                            <label for="sex" class="col-md-3">
                                Gender:
                            </label>
                            <div class="col-md-8">
                                <label class="radio">
                                    <input type="radio" name="gender" id="gender" value="male" checked>
                                    Male
                                </label>
                                <label class="radio">
                                    <input type="radio" name="gender" id="gender1" value="female">
                                    Female
                                </label>
                                <br />
                            </div>
                        </div>

                        <div>
                            <label for="type" class="col-md-3">
                                Type:
                            </label>
                            <div class="col-md-8">
                                <label class="radio">
                                    <input type="radio" name="type" id="type" value="simple" checked>
                                    Simple
                                </label>
                                <label class="radio">
                                    <input type="radio" name="type" id="type1" value="expert">
                                    Expert
                                </label>
                                <br />
                            </div>
                        </div>

                        @*<div>
                            <label for="uploadimage" class="col-md-3">
                                Upload Image:
                            </label>
                            <div class="col-md-9">
                                <input type="file" name="path" id="path">
                                <br /><p class="help-block">
                                    Allowed formats: jpeg, jpg, gif, png
                                </p><br />
                            </div>
                        </div>*@

                        <div class="form-group">
                            <button class="btn btn-primary btn-lg btn-block" onclick="submit">Sign Up</button>
                        </div>
                        <div class="form-group">
                            <a href="~/Account/Login" class="btn btn-danger btn-lg btn-block">Already Have Account? Login Now</a>
                        </div>
                        }
                        <div class="col-m-12">
                        </div>

                    </div>
        </div>
    </div>
</div>

<script>

    $(document).ready(function () {

        $('#UserName').blur(function () {
            var UserName = $('#UserName').val();
            if (UserName == "") {
                $('#error1').text("Enter UserName");
            }
            else {
                $.getJSON("CheckUserNameAvailability?UserName=" + UserName, function (data) {

                    if (data == false) {

                        $("#error1").text("UserName is available");
                        $("#error1").css("color", "green");

                    }
                    else {
                        $("#error1").text("UserName already Exist");
                        $("#error1").css("color", "red");
                        $('#UserName').val("");
                        $('#UserName').focus;
                    }
                });
            }
        });


        $('#Email').blur(function () {
            var email = $('#Email').val();
            if (email == "") {
                $('#error').text("Enter Email");
            }
            else {
                $.getJSON("CheckEmailAvailability?Email=" + email, function (data) {

                    if (data == true) {

                        $("#error").text("Email is available");
                        $("#error").css("color", "green");

                    }
                    else {
                        $("#error").text("Email already Exist");
                        $("#error").css("color", "red");
                        $('#Email').val("");
                        $('#Email').focus;
                    }
                });
            }
        });
    });


    function isNumberKey(evt) {
        var charCode = (evt.which) ? evt.which : event.keyCode
        if (charCode > 31 && (charCode != 43 && charCode != 45 && charCode != 46 && (charCode < 48 || charCode > 57)))
            return false;
        return true;
    }


</script>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
